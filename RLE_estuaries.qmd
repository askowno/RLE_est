---
title: "RLE_estuaries"
format: html
---

#### Set up the Project and import the data

```{r}
# Add packages: 
library(sf)
library(tidyverse)
library(readxl)

# Add spatial data - use IEM Jan 2025 then extract Estuaries
est_v <-st_read("C:/Users/skownoa/Dropbox/NBAwork/IEMworking/IEM5_12_07012025.gdb", layer = "IEM5_12_07012025") 
est_v <- est_v %>%
  mutate(outletID = as.numeric(E_EstID)) %>% # IEM miss names outletID as EstID (these are different codes)
  filter(outletID > 0, E_Est_BrdG != "Micro-System") # select only estuaries and exclude micros 


# Add tabular data (in excel change sheet name to Data, and remove last two rows on NAs, change cols with numbers at start of name )
est_t <- read_excel("C:/Users/skownoa/Dropbox/NBAwork/Estuaries/estuary_assesment2025_v1.xlsx", sheet = "Data")

```

#### Clean up input data

```{r}

options(scipen = 999)

# Estuaries have separate features for EFZ SHORE and EFZ, merge these together for calculating PA extent and EOO etc. Also IEM estuaries are divided up due to integration in IEM, so need to merge features based on outletID 
est_v2 <- est_v %>%
  group_by(outletID) %>%
  summarise(Shape = st_union(Shape), .groups = "drop")  

# select colums from  health spreadsheet import
est_t2 <- est_t %>%
  select(outletID,  estID, east_DD, south_DD, est_name, full_ecosystem_type_name, est_ecosystem_type_code, biogeographical_zone, efz_ha, condition24, condition18, condition11, fishing_effort24, fishing_effort18, fishing_effort11)

# combined estuary data into a table
est <- est_v2 %>%
  left_join(est_t2, by = "outletID") %>%
  # recalculate EFZ area m2 to check the data from Lara is correct
   mutate(efz_area = as.numeric(st_area(.))) %>%
st_drop_geometry() %>%
  # convert condition  scores to NBA modification classes  
  mutate(mod11 = case_when(
    round(condition11, 0) >= 90 ~ "Natural",
    round(condition11, 0) >= 75 ~ "NearNatural",
    round(condition11, 0) >= 60 ~ "Moderate",
    round(condition11, 0) >= 40 ~ "Heavily",
    TRUE ~ "Severely"
  )) %>%
  mutate(mod18 = case_when(
    round(condition18, 0) >= 90 ~ "Natural",
    round(condition18, 0) >= 75 ~ "NearNatural",
    round(condition18, 0) >= 60 ~ "Moderate",
    round(condition18, 0) >= 40 ~ "Heavily",
    TRUE ~ "Severely"
  )) %>%
   mutate(mod24 = case_when(
    round(condition24, 0) >= 90 ~ "Natural",
    round(condition24, 0) >= 75 ~ "NearNatural",
    round(condition24, 0) >= 60 ~ "Moderate",
    round(condition24, 0) >= 40 ~ "Heavily",
    TRUE ~ "Severely"
  )) %>%
   # convert condition  scores to PES classes
  mutate(pes11 = case_when(
    round(condition11, 0) >= 90 ~ "A",
    round(condition11, 0) >= 75 ~ "B",
    round(condition11, 0) >= 60 ~ "C",
    round(condition11, 0) >= 40 ~ "D",
    TRUE ~ "E"
  )) %>%
  mutate(pes18 = case_when(
    round(condition18, 0) >= 90 ~ "A",
    round(condition18, 0) >= 75 ~ "B",
    round(condition18, 0) >= 60 ~ "C",
    round(condition18, 0) >= 40 ~ "D",
    TRUE ~ "E"
  )) %>%
   mutate(pes24 = case_when(
    round(condition24, 0) >= 90 ~ "A",
    round(condition24, 0) >= 75 ~ "B",
    round(condition24, 0) >= 60 ~ "C",
    round(condition24, 0) >= 40 ~ "D",
    TRUE ~ "E"
  )) 


```

#### Spatial Analysis - Calculate EOO using convex hulls in sf

```{r}
# prepare an estuary spatial layer with correct names (from the table)
est_v3 <- est_v2 %>%
  left_join(est_t2, by = "outletID") %>%
  select(outletID, full_ecosystem_type_name, est_name)

  
# Initialize a list to store results
eoo_list <- list()

# Iterate through unique Est type values 
for (est_type in unique(est_v3$full_ecosystem_type_name)) {
  subset_data <- est_v3 %>% filter(full_ecosystem_type_name == est_type)
  if (nrow(subset_data) > 0) {
    convex_hull <- st_convex_hull(st_union(subset_data))
    hull_area <- st_area(convex_hull)
    eoo_list[[est_type]] <- as.numeric(hull_area)
  }
}

eoo_df <- data.frame(
  full_ecosystem_type_name = names(eoo_list),
  AREA_EOO = unlist(eoo_list)
) %>%
  mutate(eoo_km2 = AREA_EOO/1000000) %>%
  select(!AREA_EOO)

write.csv(eoo_df, "outputs/EOO_all.csv")

```

#### Summarise data per type

```{r}

#summarise by est type including extent per type per condition class - this allows for inclusion of pes in the RLE formula

options(scipen = 999)

# overall type x pes summary

est_type_24 <- est %>%
    group_by(full_ecosystem_type_name, pes24) %>%
  summarise(extent = sum(as.numeric(efz_area), na.rm = TRUE)) %>%
  ungroup() %>%
  pivot_wider(names_from = pes24, values_from = extent, values_fill = list(extent = 0))  %>%
  mutate(tot_ext24 = rowSums(across(c(A, B, C, D, E))))
est_type_18 <- est %>%
    group_by(full_ecosystem_type_name, pes18) %>%
  summarise(extent = sum(as.numeric(efz_area), na.rm = TRUE)) %>%
  ungroup() %>%
  pivot_wider(names_from = pes18, values_from = extent, values_fill = list(extent = 0))  %>%
  mutate(tot_ext18 = rowSums(across(c(A, B, C, D, E)))) %>%
  rename(A18=A, B18=B, C18=C, D18=D, E18=E)
est_type_11 <- est %>%
    group_by(full_ecosystem_type_name, pes11) %>%
  summarise(extent = sum(as.numeric(efz_area), na.rm = TRUE)) %>%
  ungroup() %>%
  pivot_wider(names_from = pes11, values_from = extent, values_fill = list(extent = 0))  %>%
  mutate(tot_ext11 = rowSums(across(c(A, B, C, D, E)))) %>%
  rename(A11=A, B11=B, C11=C, D11=D, E11=E)
  

# Join the tables above - this makes a single table in which all the required metrics can be found to compute RLE
 
  est_type_metrics <- est_type_24 %>%
   left_join(est_type_18, by = "full_ecosystem_type_name") %>%
   left_join(est_type_11, by = "full_ecosystem_type_name") %>%
   left_join(eoo_df, by = "full_ecosystem_type_name") %>%
 # 2018 metrics
    mutate(prp18_cde = (C18 + D18 + E18)/tot_ext18) %>%
    mutate(prp18_de = (D18 + E18)/tot_ext18) %>%
    mutate(prp18_e= (E18)/tot_ext18) %>%
    mutate(pes_decline1118 = ifelse(
       is.na(((A11 + B11 + C11) - (A18 + B18 + C18)) / (A11 + B11 + C11)) |
       (((A11 + B11 + C11) - (A18 + B18 + C18)) / (A11 + B11 + C11)) > 0.01,
  "decline1118", "nodecline1118")) %>% # isNA added for types with ABC extent = 0 :  these are declining
 # 2024 metrics
    mutate(prp24_cde = (C + D + E)/tot_ext24) %>%
    mutate(prp24_de = (D + E)/tot_ext24) %>%
    mutate(prp24_e= (E)/tot_ext24) %>%
    mutate(pes_decline1824 = ifelse(
       is.na(((A18 + B18 + C18) - (A + B + C)) / (A18 + B18 + C18)) |
       (((A18 + B18 + C18) - (A + B + C)) / (A18 + B18 + C18)) > 0.01,
  "decline1824", "nodecline1824")) %>% # isNA added for types with ABC extent = 0 :  these are declining
 # D3 assesments
    mutate(D3_18 = case_when( prp18_e >= 0.9 ~ "CR", 
       prp18_e >= 0.7 | prp18_de >=0.9 ~ "EN",
       prp18_e >= 0.5 | prp18_de >=0.7 | 
       prp18_cde >= 0.9 ~ "VU", 
       TRUE ~ "LC")) %>% 
    mutate(D3_24 = case_when( prp24_e >= 0.9 ~ "CR", 
       prp24_de >= 0.3 | prp24_de >=0.9 ~ "EN",
       prp24_e >= 0.5 | prp24_de >=0.7 | 
       prp24_cde >= 0.9 ~ "VU", 
       TRUE ~ "LC")) %>%
#  B1i using ongoing decline  
   mutate(B1aii_18 = case_when( pes_decline1118 == "decline118" & eoo_km2  <= 2000 ~ "CR",
       pes_decline1118 == "decline1118" & eoo_km2  <= 20000 ~ "EN",
       pes_decline1118 == "decline1118" & eoo_km2  <= 50000 ~ "VU",
       TRUE ~ "LC")) %>%
   mutate(B1aii_24 = case_when( pes_decline1824 == "decline1824" & eoo_km2  <= 2000 ~ "CR",
       pes_decline1824 == "decline1824" & eoo_km2  <= 20000 ~ "EN",
       pes_decline1824 == "decline1824" & eoo_km2  <= 50000 ~ "VU",
       TRUE ~ "LC")) %>%
   mutate(RLE_18 = case_when(B1aii_24 == "CR" | D3_18 == "CR" ~ "CR", 
       B1aii_24 == "EN" | D3_18 == "EN" ~ "EN",
       B1aii_24 == "VU" | D3_18 == "VU" ~ "VU",
       TRUE ~ "LC")) %>% # using decline 2018-2024 as proxy for decline 2014-2018
   mutate(RLE_24 = case_when(B1aii_24 == "CR" | D3_24 == "CR" ~ "CR", 
       B1aii_24 == "EN" | D3_24 == "EN" ~ "EN",
       B1aii_24 == "VU" | D3_24 == "VU" ~ "VU",
       TRUE ~ "LC")) %>%
# add in van Deventer 2018 method: SA approach assuming A and B are intact rest is lost but also counting C towards  VU
    mutate(A3sa_24 = case_when( prp24_cde >= 0.8 ~ "CR", 
                              prp24_cde >= 0.65 ~ "EN",
                              prp24_de >= 0.4 ~ "VU", 
                                 TRUE ~ "LC")) %>%
    mutate(A3sa_18 = case_when( prp18_cde >= 0.8 ~ "CR", 
                               prp18_cde >= 0.65 ~ "EN",
                               prp18_de >= 0.4 ~ "VU", 
                                 TRUE ~ "LC"))
    
   
   # reattached bioregions
 bioreg <- est_t %>%
  select(full_ecosystem_type_name, biogeographical_zone) %>%
      distinct(full_ecosystem_type_name, .keep_all = TRUE)
 
 est_type_metrics <- est_type_metrics %>%
      left_join(bioreg , by = "full_ecosystem_type_name" )
 
    
   # export a csv of results - Condition and EPL per river type 2018 and 2024
   write.csv(est_type_metrics, file = "outputs/rle_est_metrics_per_type.csv")
```

#### Output tables

```{r}
# 2024 summaries
# make summary counts of RLE categories per zone
 
  rle24_sum <- est_type_metrics %>%
    group_by(RLE_24, biogeographical_zone) %>%
  summarise(count = n(),.groups = 'drop') %>%
  pivot_wider(names_from = RLE_24, 
              values_from = count, values_fill = 0) %>%
  relocate(VU, .before = EN)%>%
     # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., biogeographical_zone = "Total", across(where(is.numeric), sum))) %>%
  # Add RLE index
  mutate(RLIE = (1-((CR*4)+(EN*3)+(VU*2)+(LC*1))/((CR+EN+VU+LC)*5))) %>%
     mutate(biogeographical_zone = factor(biogeographical_zone, levels = c("Total", "dTropical", "cSubTrop" , "bWTemp", "aCTemp"))) %>% ## ggplot plots inverted factors!
   arrange(biogeographical_zone)
 
 # export a csv of results - COUNT of RLE 24 per biorg zone
 write.csv(rle24_sum, file = "outputs/rle24_est_sum_count.csv") 

 # 2018 summary 
rle18_sum <- est_type_metrics %>%
    group_by(RLE_18, biogeographical_zone) %>%
  summarise(count = n(),.groups = 'drop') %>%
  pivot_wider(names_from = RLE_18, 
              values_from = count, values_fill = 0) %>%
  relocate(VU, .before = EN)%>%
     # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., biogeographical_zone = "Total", across(where(is.numeric), sum))) %>%
  # Add RLE index
  mutate(RLIE = (1-((CR*4)+(EN*3)+(VU*2)+(LC*1))/((CR+EN+VU+LC)*5))) %>%
     mutate(biogeographical_zone = factor(biogeographical_zone, levels = c("Total", "dTropical", "cSubTrop" , "bWTemp", "aCTemp"))) %>% ## ggplot plots inverted factors!
   arrange(biogeographical_zone)
 
 # export a csv of results - COUNT of RLE 24 per biorg zone
 write.csv(rle18_sum, file = "outputs/rle18_est_sum_count.csv")  
 
 # make summary of extent of RLE
 rle24_sum_ext <- est_type_metrics %>%
    group_by(RLE_24, biogeographical_zone) %>%
  summarise(extent = round(sum(tot_ext24)/1000000, 0),.groups = 'drop') %>%
  pivot_wider(names_from = RLE_24, 
              values_from = extent, values_fill = 0) %>%
  relocate(VU, .before = EN)%>%
    # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., biogeographical_zone = "Total", across(where(is.numeric), sum))) %>%
   mutate(biogeographical_zone = factor(biogeographical_zone, levels = c("Total", "dTropical", "cSubTrop" , "bWTemp", "aCTemp"))) %>% ## ggplot plots inverted factors!
   arrange(biogeographical_zone)
 
 # export a csv of results - EXTENT (km) of REL 24 per biorg zone
  write.csv(rle24_sum_ext, file = "outputs/rle24_est_sum_ext.csv")
 
```

#### **Make graphs for NBA**

```{r}

# load nbaR package : first run this in console devtools::install_github("SANBI-NBA/nbaR") 
library(nbaR)
library(extrafont) # this has tools for embedding fonts in vector graphics which 
# is required by the design team of the booklet.
loadfonts(device = "pdf") # this is required as device = cairo_pdf is not compatible with CorelDraw

# Use NBA package to make rle graph (need high res output for booklet)
pd_rle24_count <- rle24_sum %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle24_barplot_count <- nba_plot(pd_rle24_count,
                  `biogeographical_zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = TRUE,
                 LAB = "Percentage of ecosystem types",
                 SAVE = NULL,
                 SCALE_TEXT = 0.6)

rle24_barplot_count <- rle24_barplot_count +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export the 2024 plot of counts 
ggsave(
  filename = "outputs/rle24_est_barplot_count.png", # File name
  plot = rle24_barplot_count,                  # Plot object
    width = 9, height = 7, units = "cm",        # Dimensions
     dpi = 300)                                 # Resolution


# graphs for extent per biogr zone per rle category

pd_rle24_ext <- rle24_sum_ext %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle24_barplot_ext <- nba_plot(pd_rle24_ext,
                  `biogeographical_zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = FALSE,
                 LAB = "Extent of ecosystem types",
                 SAVE = NULL,
                 SCALE_TEXT = 0.6)

rle24_barplot_ext <- rle24_barplot_ext +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export the 2024 plot of counts 
ggsave(
  filename = "outputs/rle24_est_barplot_ext.png", # File name
  plot = rle24_barplot_ext,                  # Plot object
    width = 9, height = 7, units = "cm",        # Dimensions
     dpi = 300)                                 # Resolution


# Make a line plot of EPL Index using 2018 and 2014 timepoints - request Natasha to impve this or add to package.

RLIE <- rle24_sum %>%
  select(biogeographical_zone, RLIE) %>% 
  rename(RLIE24 = RLIE) %>%
   left_join(rle18_sum, by ="biogeographical_zone") %>%
   rename(RLIE18 = RLIE) %>%
   rename(Zone = biogeographical_zone) %>%
  select(Zone,RLIE18, RLIE24) %>%
  pivot_longer(cols = c(2,3), names_to = "Year", values_to = "RLIE") %>%
    mutate(Year = case_when(
    Year == "RLIE18" ~ "2018",
    Year == "RLIE24" ~ "2024",
    TRUE ~ Year
  ))
  

rlie_line_plot <- ggplot(RLIE, aes(x = Year, y = RLIE, group = Zone)) +
  geom_line(aes(linetype = Zone, color = Zone), linewidth = 1.2) +
  geom_point(aes(color = Zone), size = 2) +
  theme_minimal() +
  labs(x = "Year", y = "RLIE") +
  scale_x_discrete(limits = c("2018", "2024"), expand = c(0, 0)) +
  scale_color_manual(values = c(
    "Total" = "black",
    "aCTemp" = "blue",
    "bWTemp" = "darkgreen",
    "cSubTrop" = "brown",
    "dTropical" = "orange"
  )) +
  coord_cartesian(ylim = c(0.1, 0.9)) +
    guides(color = guide_legend(reverse = TRUE),
         linetype = guide_legend(reverse = TRUE)) +
  theme(legend.title = element_blank())
 
  
  #export the graph
ggsave(
  filename = "outputs/rlie_est_line_plot.png", # File name
  plot = rlie_line_plot,                   # Plot object
  device = "png",                        # File format
  width = 12, height = 10, units = "cm"   # Dimensions
)
```

```{r}
# Prepare output spatial data 
est_rle_res_v <- est_v3 %>%
  left_join(est_type_metrics, by = "full_ecosystem_type_name") %>%
  relocate(biogeographical_zone, .after = full_ecosystem_type_name)
 
st_write(est_rle_res_v, "C:/Users/skownoa/Dropbox/NBAwork/Estuaries/est_rle_results.gpkg") 
```
