---
title: "RLE_estuaries"
format: html
---

#### Set up the Project and import the data

```{r}
# Add packages: 
library(sf)
library(tidyverse)
library(readxl)
library(terra)
library(PROJ)

# Add spatial data - use IEM Jan 2025 then extract Estuaries
est_v <-st_read("C:/Users/skownoa/Dropbox/NBAwork/IEMworking/IEM5_12_07012025.gdb", layer = "IEM5_12_07012025") 
est_v <- est_v %>%
  mutate(outletID = as.numeric(E_EstID)) %>% # IEM miss names outletID as EstID (these are different codes)
  filter(outletID > 0, E_Est_BrdG != "Micro-System") # select only estuaries and exclude micros 

# Add tabular data (in excel change sheet name to Data, and remove last two rows on NAs, change cols with numbers at start of name )
est_t <- read_excel("C:/Users/skownoa/Dropbox/NBAwork/Estuaries/estuary_assesment2025_v1.xlsx", sheet = "Data")

# load supplementary data from nba2018 on the eoo a00 and number of locaitons and ongoing decline
est_supp <- read_csv("C:/Users/skownoa/Dropbox/NBAwork/Estuaries/from_nba2018_eoo_aoo_numfeat.csv")
est_feat <- est_supp %>% select(full_ecosystem_type_name, features, declnba18)
```

#### Clean up input data

```{r}

options(scipen = 999)

# Estuaries have separate features for EFZ SHORE and EFZ, merge these together for calculating PA extent and EOO etc. Also IEM estuaries are divided up due to integration in IEM, so need to merge features based on outletID 
est_v2 <- est_v %>%
  group_by(outletID) %>%
  summarise(Shape = st_union(Shape), .groups = "drop")  

# select colums from  health spreadsheet import
est_t2 <- est_t %>%
  select(outletID,  estID, east_DD, south_DD, est_name, full_ecosystem_type_name, est_ecosystem_type_code, biogeographical_zone, efz_ha, condition24, condition18, condition11, fishing_effort24, fishing_effort18, fishing_effort11)

# combined estuary data into a table
est <- est_v2 %>%
  left_join(est_t2, by = "outletID") %>%
  # recalculate EFZ area m2 to check the data from Lara is correct
   mutate(efz_area = as.numeric(st_area(.))) %>%
st_drop_geometry() %>%
  # convert condition  scores to NBA modification classes  
  mutate(mod11 = case_when(
    round(condition11, 0) >= 90 ~ "Natural",
    round(condition11, 0) >= 75 ~ "NearNatural",
    round(condition11, 0) >= 60 ~ "Moderate",
    round(condition11, 0) >= 40 ~ "Heavily",
    TRUE ~ "Severely"
  )) %>%
  mutate(mod18 = case_when(
    round(condition18, 0) >= 90 ~ "Natural",
    round(condition18, 0) >= 75 ~ "NearNatural",
    round(condition18, 0) >= 60 ~ "Moderate",
    round(condition18, 0) >= 40 ~ "Heavily",
    TRUE ~ "Severely"
  )) %>%
   mutate(mod24 = case_when(
    round(condition24, 0) >= 90 ~ "Natural",
    round(condition24, 0) >= 75 ~ "NearNatural",
    round(condition24, 0) >= 60 ~ "Moderate",
    round(condition24, 0) >= 40 ~ "Heavily",
    TRUE ~ "Severely"
  )) %>%
   # convert condition  scores to PES classes
  mutate(pes11 = case_when(
    round(condition11, 0) >= 90 ~ "A",
    round(condition11, 0) >= 75 ~ "B",
    round(condition11, 0) >= 60 ~ "C",
    round(condition11, 0) >= 40 ~ "D",
    TRUE ~ "E"
  )) %>%
  mutate(pes18 = case_when(
    round(condition18, 0) >= 90 ~ "A",
    round(condition18, 0) >= 75 ~ "B",
    round(condition18, 0) >= 60 ~ "C",
    round(condition18, 0) >= 40 ~ "D",
    TRUE ~ "E"
  )) %>%
   mutate(pes24 = case_when(
    round(condition24, 0) >= 90 ~ "A",
    round(condition24, 0) >= 75 ~ "B",
    round(condition24, 0) >= 60 ~ "C",
    round(condition24, 0) >= 40 ~ "D",
    TRUE ~ "E"
  )) 


```

#### Spatial Analysis

```{r}
# prepare an estuary spatial layer with correct names (from the table)
est_v3 <- est_v2 %>%
  left_join(est_t2, by = "outletID") %>%
  select(outletID, full_ecosystem_type_name, est_name)
```

Criterion A calculation

```{r}
# cross tab estuaries with land cover 1990, 2014, 2018 and 2022 and calculate extent lost and rate of loss

#Add data 
lc1990 <- rast("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/nlc1990_7class.tif") 
lc2014 <- rast("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/nlc2014_7class.tif")
lc2018 <- rast("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/nlc2018_7class.tif")
lc2022 <- rast("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/nlc2022_7class.tif")


# Extract raster values under each polygon, return ID
extract1990 <- terra::extract(lc1990, est_v3)
extract1990$outletID <- est_v3$outletID[extract1990$ID] # note - indexing not a join
tb1990 <- extract1990 %>%
  count(outletID, class = .[[2]], name = "Freq") %>%
  mutate(YEAR = 1990)

extract2014 <- terra::extract(lc2014, est_v3)
extract2014$outletID <- est_v3$outletID[extract2014$ID] # note - indexing not a join
tb2014 <- extract2014 %>%
  count(outletID, class = .[[2]], name = "Freq") %>%
  mutate(YEAR = 2014)

extract2018 <- terra::extract(lc2018, est_v3)
extract2018$outletID <- est_v3$outletID[extract2018$ID] # note - indexing not a join
tb2018 <- extract2018 %>%
  count(outletID, class = .[[2]], name = "Freq") %>%
  mutate(YEAR = 2018)

extract2022 <- terra::extract(lc2022, est_v3)
extract2022$outletID <- est_v3$outletID[extract2022$ID] # note - indexing not a join
tb2022 <- extract2022 %>%
  count(outletID, class = .[[2]], name = "Freq") %>%
  mutate(YEAR = 2022)

# combine the results
lc7_list = list(tb1990,tb2014,tb2018,tb2022) 
lc7_rall <- lc7_list %>%  bind_rows() %>%   
  as_tibble()

outlet_ras_ext <- lc7_rall %>%   
  filter(YEAR == 2022) %>%
  group_by(YEAR, outletID) %>% 
  summarise(tot_m2 = sum(Freq*400),.groups = "drop") %>%
  pivot_wider(names_from = "YEAR", values_from = "tot_m2") %>%
  rename(efz_area_ras = `2022`)

outlet_nat_ext <- lc7_rall %>%   
  filter(class == 1| is.na(class)) %>% 
  group_by(YEAR, outletID) %>% 
  summarise(nat_m2 = sum(Freq*400),.groups = "drop") %>%
  pivot_wider(names_from = "YEAR", values_from = "nat_m2", names_glue = "nat{YEAR}")

outlet_lc_metrics <- outlet_ras_ext %>%
  left_join(outlet_nat_ext, by = "outletID")
  
est_lc_metrics <- est_t2 %>%
  left_join(outlet_lc_metrics, by = "outletID") %>%
  group_by(full_ecosystem_type_name) %>%
  summarise(type_area = sum(efz_area_ras), nat1990 = sum(nat1990), nat2014 = sum(nat2014), nat2018 = sum(nat2018), nat2022 = sum(nat2022), .groups = "drop") %>%
  #metrics for A3
  mutate(prpnat1990 = nat1990/type_area, prpnat2014 = nat2014/type_area, 
         prpnat2018 = nat2018/type_area, prpnat2022 = nat2022/type_area) %>%
  #metrics for A2b
  mutate(ard9022 = (nat1990-nat2022)/(2022-1990)) %>%
  mutate(nat40_9022 = nat1990 - (ard9022*50))  %>%
  mutate(prplost9040_9022 = (nat1990-nat40_9022)/nat1990) %>%
  mutate(ard9018 = (nat1990-nat2018)/(2018-1990)) %>%
  mutate(nat40_9018 = nat1990 - (ard9018*50))  %>%
  mutate(prplost9040_9018 = (nat1990-nat40_9018)/nat1990) %>%
    # assessment 2024
  mutate(A3_24 = case_when(prpnat2022 < 0.1 ~ "CR",
                        prpnat2022 < 0.3 ~ "EN", 
                        prpnat2022 < 0.5 ~ "VU", 
                        TRUE ~"LC")) %>%
  mutate(A3_24 = factor(A3_24, levels = c("LC","VU", "EN", "CR"), ordered = TRUE)) %>%
  mutate(A2b_24 = case_when(prplost9040_9022 >= 0.8 ~ "CR",
                         prplost9040_9022 >= 0.5 ~ "EN",
                         prplost9040_9022 >= 0.3 ~ "VU", 
                         TRUE ~ "LC")) %>%
  mutate(A2b_24 = factor(A2b_24, levels = c("LC","VU", "EN", "CR" ), ordered = TRUE)) %>%
# assessment 2018
 mutate(A3_18 = case_when(prpnat2018 < 0.1 ~ "CR",
                        prpnat2018 < 0.3 ~ "EN", 
                        prpnat2018 < 0.5 ~ "VU", 
                        TRUE ~"LC")) %>%
  mutate(A3_18 = factor(A3_18, levels = c("LC","VU", "EN", "CR"), ordered = TRUE)) %>%
  mutate(A2b_18 = case_when(prplost9040_9018 >= 0.8 ~ "CR",
                         prplost9040_9018 >= 0.5 ~ "EN",
                         prplost9040_9018 >= 0.3 ~ "VU", 
                         TRUE ~ "LC")) %>%
  mutate(A2b_18 = factor(A2b_18, levels = c("LC","VU", "EN", "CR" ), ordered = TRUE)) 


```

Criterion B calculation

```{r}


##   Calculate EOO using convex hulls in sf  
# Initialize a list to store results
eoo_list <- list()

# Iterate through unique Est type values 
for (est_type in unique(est_v3$full_ecosystem_type_name)) {
  subset_data <- est_v3 %>% filter(full_ecosystem_type_name == est_type)
  if (nrow(subset_data) > 0) {
    convex_hull <- st_convex_hull(st_union(subset_data))
    hull_area <- st_area(convex_hull)
    eoo_list[[est_type]] <- as.numeric(hull_area)
  }
}

eoo_df <- data.frame(
  full_ecosystem_type_name = names(eoo_list),
  AREA_EOO = unlist(eoo_list)
) %>%
  mutate(eoo_km2 = AREA_EOO/1000000) %>%
  select(!AREA_EOO)

write.csv(eoo_df, "outputs/EOO_all.csv")

```

#### Summarise data per type

```{r}

#summarise by est type including extent per type per condition class - this allows for inclusion of pes in the RLE formula

options(scipen = 999)

# overall type x pes summary

est_type_24 <- est %>%
    group_by(full_ecosystem_type_name, pes24) %>%
  summarise(extent = sum(as.numeric(efz_area), na.rm = TRUE)) %>%
  ungroup() %>%
  pivot_wider(names_from = pes24, values_from = extent, values_fill = list(extent = 0))  %>%
  mutate(tot_ext24 = rowSums(across(c(A, B, C, D, E))))
est_type_18 <- est %>%
    group_by(full_ecosystem_type_name, pes18) %>%
  summarise(extent = sum(as.numeric(efz_area), na.rm = TRUE)) %>%
  ungroup() %>%
  pivot_wider(names_from = pes18, values_from = extent, values_fill = list(extent = 0))  %>%
  mutate(tot_ext18 = rowSums(across(c(A, B, C, D, E)))) %>%
  rename(A18=A, B18=B, C18=C, D18=D, E18=E)
est_type_11 <- est %>%
    group_by(full_ecosystem_type_name, pes11) %>%
  summarise(extent = sum(as.numeric(efz_area), na.rm = TRUE)) %>%
  ungroup() %>%
  pivot_wider(names_from = pes11, values_from = extent, values_fill = list(extent = 0))  %>%
  mutate(tot_ext11 = rowSums(across(c(A, B, C, D, E)))) %>%
  rename(A11=A, B11=B, C11=C, D11=D, E11=E)
  

# Join the tables above - this makes a single table in which all the required metrics can be found to compute RLE
 
 est_type_metrics <- est_type_24 %>%
   left_join(est_type_18, by = "full_ecosystem_type_name") %>%
   left_join(est_type_11, by = "full_ecosystem_type_name") %>%
   left_join(eoo_df, by = "full_ecosystem_type_name") %>%
 # 2018 metrics
    mutate(prp18_cde = (C18 + D18 + E18)/tot_ext18) %>%
    mutate(prp18_de = (D18 + E18)/tot_ext18) %>%
    mutate(prp18_e= (E18)/tot_ext18) %>%
    mutate(pes_decline1118 = ifelse(
       is.na(((A11 + B11 + C11) - (A18 + B18 + C18)) / (A11 + B11 + C11)) |
       (((A11 + B11 + C11) - (A18 + B18 + C18)) / (A11 + B11 + C11)) > 0.01,
  "decline1118", "nodecline1118")) %>% # isNA added for types with ABC extent = 0 :  these are declining
 # 2024 metrics
    mutate(prp24_cde = (C + D + E)/tot_ext24) %>%
    mutate(prp24_de = (D + E)/tot_ext24) %>%
    mutate(prp24_e= (E)/tot_ext24) %>%
    mutate(pes_decline1824 = ifelse(
       is.na(((A18 + B18 + C18) - (A + B + C)) / (A18 + B18 + C18)) |
       (((A18 + B18 + C18) - (A + B + C)) / (A18 + B18 + C18)) > 0.01,
  "decline1824", "nodecline1824")) %>% # isNA added for types with ABC extent = 0 :  these are declining
 # D3 assesments
    mutate(D3_18 = case_when( prp18_e >= 0.9 ~ "CR", 
       prp18_e >= 0.7 | prp18_de >=0.9 ~ "EN",
       prp18_e >= 0.5 | prp18_de >=0.7 | 
       prp18_cde >= 0.9 ~ "VU", 
       TRUE ~ "LC")) %>% 
    mutate(D3_18 = factor(D3_18, levels = c("LC","VU", "EN", "CR"), ordered = TRUE)) %>%
    mutate(D3_24 = case_when( prp24_e >= 0.9 ~ "CR", 
       prp24_de >= 0.3 | prp24_de >=0.9 ~ "EN",
       prp24_e >= 0.5 | prp24_de >=0.7 | 
       prp24_cde >= 0.9 ~ "VU", 
       TRUE ~ "LC")) %>%
     mutate(D3_24 = factor(D3_24, levels = c("LC","VU", "EN", "CR"), ordered = TRUE)) %>%
#  B1aii using ongoing decline  
   mutate(B1aii_18 = case_when( pes_decline1118 == "decline118" & eoo_km2  <= 2000 ~ "CR",
       pes_decline1118 == "decline1118" & eoo_km2  <= 20000 ~ "EN",
       pes_decline1118 == "decline1118" & eoo_km2  <= 50000 ~ "VU",
       TRUE ~ "LC")) %>%
   mutate(B1aii_18 = factor(B1aii_18, levels = c("LC","VU", "EN", "CR"), ordered = TRUE)) %>%
   mutate(B1aii_24 = case_when( pes_decline1824 == "decline1824" & eoo_km2  <= 2000 ~ "CR",
       pes_decline1824 == "decline1824" & eoo_km2  <= 20000 ~ "EN",
       pes_decline1824 == "decline1824" & eoo_km2  <= 50000 ~ "VU",
       TRUE ~ "LC")) %>%
   mutate(B1aii_24 = factor(B1aii_24, levels = c("LC","VU", "EN", "CR"), ordered = TRUE)) %>%
  # add the table with A3 and Asb
    left_join(est_lc_metrics, by = "full_ecosystem_type_name") %>%
   # add B3 2018 table and assessment - could also add 2024 if lara wantrs to do this for now assume 18=24
    left_join(est_feat, by = "full_ecosystem_type_name") %>%
   mutate(B3_18 = case_when(features <=5 & declnba18 == "yes" ~ "VU", 
                         TRUE ~ "LC")) %>%
    mutate(B3_18 = factor(B3_18, levels = c("LC","VU", "EN", "CR"), ordered = TRUE)) %>%
  # make B3 24 = 18
   mutate(B3_24 = B3_18)%>% 
   #clean up order of cols
   relocate(A2b_18, A3_18, B1aii_18, B3_18, D3_18,  A2b_24, A3_24,  B1aii_24, B3_24, D3_24 , .after = prplost9040_9018) %>%
  # overall RLE outcome USING  A2b A3 B1 B3 D3
     rowwise() %>%
    mutate(RLE18 = max(c_across(all_of(c("D3_18",  "B1aii_18","B3_18", "A2b_18", "A3_18"))), na.rm = TRUE)) %>%
    mutate(RLE24 = max(c_across(all_of(c("D3_24", "B1aii_24", "B3_24", "A2b_24", "A3_24"))), na.rm = TRUE)) %>%
     ungroup() %>%
   rowwise() %>%
  mutate(trigger18 = paste(c("A2b_18", "A3_18", "B1aii_18", "B3_18", "D3_18")
                           [c_across(A2b_18:D3_18) == RLE18], collapse = ", ")) %>%
  mutate(trigger24 = paste(c("A2b_24", "A3_24", "B1aii_24", "B3_24", "D3_24")
                           [c_across(A2b_24:D3_24) == RLE24], collapse = ", ")) %>%
   ungroup()  %>%
   # add in 2018 approach  SA approach assuming A and B are intact rest is lost but also counting C towards  VU
        mutate(A3sa_18 = case_when( prp18_de >= 0.8 ~ "CR", 
                                  prp18_de >= 0.65 ~ "EN",
                                  prp18_de >= 0.4 ~ "VU", 
                                 TRUE ~ "LC")) %>%
   mutate(A3sa_18 = factor(A3sa_18, levels = c("LC","VU", "EN", "CR"), ordered = TRUE)) %>%
        mutate(A3sa_24 = case_when( prp24_de >= 0.8 ~ "CR", 
                                  prp24_de >= 0.65 ~ "EN",
                                  prp24_de >= 0.4 ~ "VU", 
                                 TRUE ~ "LC")) %>%
   mutate(A3sa_24 = factor(A3sa_24, levels = c("LC","VU", "EN", "CR"), ordered = TRUE)) %>%
   # Overall ETS + RLE using ETS B3
    rowwise() %>%
    mutate(ETS18 = max(c_across(all_of(c("A3sa_18", "B3_18", "D3_24" ))), na.rm = TRUE)) %>%
    mutate(ETS24 = max(c_across(all_of(c("A3sa_24","B3_24", "D3_24"))), na.rm = TRUE)) %>%
     ungroup() %>%
   rowwise() %>%
   relocate(A3sa_18, A3sa_24, ETS18, ETS24, .after = D3_24) %>%
   relocate(features, declnba18, .before = A2b_18)
    
   
   # reattached bioregions
 bioreg <- est_t %>%
   select(full_ecosystem_type_name, biogeographical_zone) %>%
      distinct(full_ecosystem_type_name, .keep_all = TRUE)
 
 est_type_metrics <- est_type_metrics %>%
      left_join(bioreg , by = "full_ecosystem_type_name" ) %>%
      relocate(biogeographical_zone, .after = full_ecosystem_type_name)
      

    
   # export a csv of results - Condition and EPL per river type 2018 and 2024
   write.csv(est_type_metrics, file = "outputs/rle_est_metrics_per_type.csv")
```

#### Output tables

```{r}
# 2024 summaries of RLE 
# make summary counts of RLE categories per zone
 
  rle24_sum <- est_type_metrics %>%
    group_by(RLE24, biogeographical_zone) %>%
  summarise(count = n(),.groups = 'drop') %>%
  pivot_wider(names_from = RLE24, 
              values_from = count, values_fill = 0) %>%
  relocate(VU, .before = EN)%>%
     # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., biogeographical_zone = "Total", across(where(is.numeric), sum))) %>%
  # Add RLE index
  mutate(RLIE = (1-((CR*4)+(EN*3)+(VU*2)+(LC*1))/((CR+EN+VU+LC)*5))) %>%
     mutate(biogeographical_zone = factor(biogeographical_zone, levels = c("Total", "dTropical", "cSubTrop" , "bWTemp", "aCTemp"))) %>% ## ggplot plots inverted factors!
   arrange(biogeographical_zone)
 
 # export a csv of results - COUNT of RLE 24 per biorg zone
 write.csv(rle24_sum, file = "outputs/rle24_est_sum_count.csv") 

 # 2018 summary 
rle18_sum <- est_type_metrics %>%
    group_by(RLE18, biogeographical_zone) %>%
  summarise(count = n(),.groups = 'drop') %>%
  pivot_wider(names_from = RLE18, 
              values_from = count, values_fill = 0) %>%
  relocate(VU, .before = EN)%>%
     # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., biogeographical_zone = "Total", across(where(is.numeric), sum))) %>%
  # Add RLE index
  mutate(RLIE = (1-((CR*4)+(EN*3)+(VU*2)+(LC*1))/((CR+EN+VU+LC)*5))) %>%
     mutate(biogeographical_zone = factor(biogeographical_zone, levels = c("Total", "dTropical", "cSubTrop" , "bWTemp", "aCTemp"))) %>% ## ggplot plots inverted factors!
   arrange(biogeographical_zone)
 
 # export a csv of results - COUNT of RLE 24 per biorg zone
 write.csv(rle18_sum, file = "outputs/rle18_est_sum_count.csv")  
 
 # make summary of extent of RLE
 rle24_sum_ext <- est_type_metrics %>%
    group_by(RLE24, biogeographical_zone) %>%
  summarise(extent = round(sum(tot_ext24)/1000000, 0),.groups = 'drop') %>%
  pivot_wider(names_from = RLE24, 
              values_from = extent, values_fill = 0) %>%
  relocate(VU, .before = EN)%>%
    # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., biogeographical_zone = "Total", across(where(is.numeric), sum))) %>%
   mutate(biogeographical_zone = factor(biogeographical_zone, levels = c("Total", "dTropical", "cSubTrop" , "bWTemp", "aCTemp"))) %>% ## ggplot plots inverted factors!
   arrange(biogeographical_zone)
 
 
 # export a csv of results - EXTENT (km) of REL 24 per biorg zone
  write.csv(rle24_sum_ext, file = "outputs/rle24_est_sum_ext.csv")
 
```

**Summarise SA ETS approach results**

```{r}
# make summary counts of ETS SA  categories per zone
 
  rle24sa_sum <- est_type_metrics %>%
    group_by(ETS24, biogeographical_zone) %>%
  summarise(count = n(),.groups = 'drop') %>%
  pivot_wider(names_from = ETS24, 
              values_from = count, values_fill = 0) %>%
  relocate(VU, .before = EN)%>%
     # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., biogeographical_zone = "Total", across(where(is.numeric), sum))) %>%
     mutate(biogeographical_zone = factor(biogeographical_zone, levels = c("Total", "dTropical", "cSubTrop" , "bWTemp", "aCTemp"))) %>% ## ggplot plots inverted factors!
   arrange(biogeographical_zone)
 
 # export a csv of results - COUNT of ETS 24 per biorg zone
 write.csv(rle24sa_sum, file = "outputs/rle24sa_est_sum_count.csv") 

 # 2018 summary 
rle18sa_sum <- est_type_metrics %>%
    group_by(ETS18, biogeographical_zone) %>%
  summarise(count = n(),.groups = 'drop') %>%
  pivot_wider(names_from = ETS18, 
              values_from = count, values_fill = 0) %>%
  relocate(VU, .before = EN)%>%
     # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., biogeographical_zone = "Total", across(where(is.numeric), sum))) %>%
       mutate(biogeographical_zone = factor(biogeographical_zone, levels = c("Total", "dTropical", "cSubTrop" , "bWTemp", "aCTemp"))) %>% ## ggplot plots inverted factors!
   arrange(biogeographical_zone)
 
 # export a csv of results - COUNT of ETS 18 per biorg zone
 write.csv(rle18sa_sum, file = "outputs/rle18sa_est_sum_count.csv")  
```

#### **Make RLE graphs for NBA**

```{r}


# load nbaR package : first run this in console devtools::install_github("SANBI-NBA/nbaR") 
library(nbaR)
library(extrafont) # this has tools for embedding fonts in vector graphics which 
# is required by the design team of the booklet.
loadfonts(device = "pdf") # this is required as device = cairo_pdf is not compatible with CorelDraw

# Use NBA package to make rle graph (need high res output for booklet)
pd_rle24_count <- rle24_sum %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle24_barplot_count <- nba_plot(pd_rle24_count,
                  `biogeographical_zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = TRUE,
                 LAB = "Percentage of ecosystem types",
                 SAVE = NULL,
                 SCALE_TEXT = 0.6)

rle24_barplot_count <- rle24_barplot_count +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export the 2024 plot of counts 
ggsave(
  filename = "outputs/rle24_est_barplot_count.png", # File name
  plot = rle24_barplot_count,                  # Plot object
    width = 9, height = 7, units = "cm",        # Dimensions
     dpi = 300)                                 # Resolution


# graphs for extent per biogr zone per rle category

pd_rle24_ext <- rle24_sum_ext %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle24_barplot_ext <- nba_plot(pd_rle24_ext,
                  `biogeographical_zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = FALSE,
                 LAB = "Extent of ecosystem types",
                 SAVE = NULL,
                 SCALE_TEXT = 0.6)

rle24_barplot_ext <- rle24_barplot_ext +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export the 2024 plot of counts 
ggsave(
  filename = "outputs/rle24_est_barplot_ext.png", # File name
  plot = rle24_barplot_ext,                  # Plot object
    width = 9, height = 7, units = "cm",        # Dimensions
     dpi = 300)                                 # Resolution


# Make RLE 2018 graph based on counts ####################################

pd_rle18_count <- rle18_sum %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle18_barplot_count <- nba_plot(pd_rle18_count,
                  `biogeographical_zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = TRUE,
                 LAB = "Percentage of ecosystem types",
                 SAVE = NULL,
                 SCALE_TEXT = 0.6)

rle18_barplot_count <- rle18_barplot_count +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export the 2018 plot of counts 
ggsave(
  filename = "outputs/rle18_est_barplot_count.png", # File name
  plot = rle18_barplot_count,                  # Plot object
    width = 9, height = 7, units = "cm",        # Dimensions
     dpi = 300)                                 # Resolution


# Make a line plot of EPL Index using 2018 and 2014 timepoints - request Natasha to impve this or add to package.

RLIE <- rle24_sum %>%
  select(biogeographical_zone, RLIE) %>% 
  rename(RLIE24 = RLIE) %>%
   left_join(rle18_sum, by ="biogeographical_zone") %>%
   rename(RLIE18 = RLIE) %>%
   rename(Zone = biogeographical_zone) %>%
  select(Zone,RLIE18, RLIE24) %>%
  pivot_longer(cols = c(2,3), names_to = "Year", values_to = "RLIE") %>%
    mutate(Year = case_when(
    Year == "RLIE18" ~ "2018",
    Year == "RLIE24" ~ "2024",
    TRUE ~ Year
  ))

rlie_line_plot <- ggplot(RLIE, aes(x = Year, y = RLIE, group = Zone)) +
  geom_line(aes(linetype = Zone, color = Zone), linewidth = 1.2) +
  geom_point(aes(color = Zone), size = 2) +
  theme_minimal() +
  labs(x = "Year", y = "RLIE") +
  scale_x_discrete(limits = c("2018", "2024"), expand = c(0, 0)) +
  scale_color_manual(values = c(
    "Total" = "black",
    "aCTemp" = "blue",
    "bWTemp" = "darkgreen",
    "cSubTrop" = "brown",
    "dTropical" = "orange"
  )) +
  coord_cartesian(ylim = c(0.1, 0.9)) +
    guides(color = guide_legend(reverse = TRUE),
         linetype = guide_legend(reverse = TRUE)) +
  theme(legend.title = element_blank())
 
  
  #export the graph
ggsave(
  filename = "outputs/rlie_est_line_plot.png", # File name
  plot = rlie_line_plot,                   # Plot object
  device = "png",                        # File format
  width = 12, height = 10, units = "cm"   # Dimensions
)
```

```{r}
# Use NBA package to make ETS  graph (need high res output for booklet)
pd_rle24sa_count <- rle24sa_sum %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle24sa_barplot_count <- nba_plot(pd_rle24sa_count,
                  `biogeographical_zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = TRUE,
                 LAB = "Percentage of ecosystem types",
                 SAVE = NULL,
                 SCALE_TEXT = 0.6)

rle24sa_barplot_count <- rle24sa_barplot_count +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export the 2024 plot of counts 
ggsave(
  filename = "outputs/rle24sa_est_barplot_count.png", # File name
  plot = rle24sa_barplot_count,                  # Plot object
    width = 9, height = 7, units = "cm",        # Dimensions
     dpi = 300)                                 # Resolution



# Make ETS  2018 graph based on counts ####################################

pd_rle18sa_count <- rle18sa_sum %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle18sa_barplot_count <- nba_plot(pd_rle18sa_count,
                  `biogeographical_zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = TRUE,
                 LAB = "Percentage of ecosystem types",
                 SAVE = NULL,
                 SCALE_TEXT = 0.6)

rle18sa_barplot_count <- rle18sa_barplot_count +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export the 2018 plot of counts 
ggsave(
  filename = "outputs/rle18sa_est_barplot_count.png", # File name
  plot = rle18sa_barplot_count,                  # Plot object
    width = 9, height = 7, units = "cm",        # Dimensions
     dpi = 300)                                 # Resolution






```

```{r}

```
